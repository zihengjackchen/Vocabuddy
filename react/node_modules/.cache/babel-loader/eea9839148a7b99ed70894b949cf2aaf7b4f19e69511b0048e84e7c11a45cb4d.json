{"ast":null,"code":"var _jsxFileName = \"/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Progress/Progress.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Typography, List, ListItem, ListItemText, Slider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://35.208.70.236/';\nfunction Progress() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [activeTab, setActiveTab] = useState(0); // 0 for GRE, 1 for TOEFL\n  const [recentWords, setRecentWords] = useState([]);\n  const [leastLearnedWords, setLeastLearnedWords] = useState([]);\n  const [progressPercentage, setProgressPercentage] = useState('');\n  useEffect(() => {\n    // Load user data from session storage\n    const rawData = sessionStorage.getItem('user');\n    if (rawData) {\n      const savedData = JSON.parse(rawData);\n      if (savedData && savedData[0]) {\n        // Ensure savedData is not empty\n        setUser(savedData[0]); // Assuming you want the first item of an array\n      }\n    }\n  }, []);\n\n  // Assume user's email is stored in session storage\n  const email = user.Email;\n  const TestId = activeTab === 0 ? 0 : 3;\n  useEffect(() => {\n    const fetchRecentWords = async () => {\n      try {\n        const response = await axios.get(`/api/Learns/recent`, {\n          params: {\n            Email: email,\n            numwords: 10\n          }\n        });\n        setRecentWords(response.data);\n      } catch (error) {\n        console.error('Failed to fetch recent words:', error);\n      }\n    };\n    const fetchLeastLearnedWords = async () => {\n      try {\n        const response = await axios.get(`/api/Learns/least`, {\n          params: {\n            Email: email,\n            TestId: testId,\n            numwords: 10\n          }\n        });\n        setLeastLearnedWords(response.data);\n      } catch (error) {\n        console.error('Failed to fetch least learned words:', error);\n      }\n    };\n    const fetchProgress = async () => {\n      try {\n        const response = await axios.get(`/api/Learns/progress`, {\n          params: {\n            Email: email,\n            TestId: testId\n          }\n        });\n        setProgressPercentage(`Progress: ${response.data.progress}%`);\n      } catch (error) {\n        console.error('Failed to fetch progress:', error);\n      }\n    };\n    if (email) {\n      fetchRecentWords();\n      fetchLeastLearnedWords();\n      fetchProgress();\n    }\n  }, [email, testId]);\n  const handleSliderChange = (event, newValue) => {\n    setTestId(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      typography: 'body1',\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Learning Progress Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      value: testId,\n      onChange: handleSliderChange,\n      \"aria-labelledby\": \"test-id-slider\",\n      valueLabelDisplay: \"auto\",\n      min: 1,\n      max: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Recently Learned Words\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: recentWords.map((word, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: word.word,\n          secondary: `Meaning: ${word.meaning}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Words to Improve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: leastLearnedWords.map((word, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: word.word,\n          secondary: `Meaning: ${word.meaning}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: progressPercentage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Progress, \"h+ps3esMlMn2HXigt7s/ODRJCpU=\");\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Typography","List","ListItem","ListItemText","Slider","jsxDEV","_jsxDEV","defaults","baseURL","Progress","_s","user","setUser","activeTab","setActiveTab","recentWords","setRecentWords","leastLearnedWords","setLeastLearnedWords","progressPercentage","setProgressPercentage","rawData","sessionStorage","getItem","savedData","JSON","parse","email","Email","TestId","fetchRecentWords","response","get","params","numwords","data","error","console","fetchLeastLearnedWords","testId","fetchProgress","progress","handleSliderChange","event","newValue","setTestId","sx","width","typography","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","valueLabelDisplay","min","max","map","word","index","primary","secondary","meaning","_c","$RefreshReg$"],"sources":["/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Progress/Progress.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Typography, Tab, Tabs, List, ListItem, ListItemText, Slider } from '@mui/material';\n\naxios.defaults.baseURL = 'http://35.208.70.236/';\n\nfunction Progress() {\n  const [user, setUser] = useState<any>(null);\n  const [activeTab, setActiveTab] = useState(0); // 0 for GRE, 1 for TOEFL\n  const [recentWords, setRecentWords] = useState([]);\n  const [leastLearnedWords, setLeastLearnedWords] = useState([]);\n  const [progressPercentage, setProgressPercentage] = useState('');\n\n\n\n  useEffect(() => {\n    // Load user data from session storage\n    const rawData = sessionStorage.getItem('user');\n    if (rawData) {\n        const savedData = JSON.parse(rawData);\n        if (savedData && savedData[0]) { // Ensure savedData is not empty\n            setUser(savedData[0]);       // Assuming you want the first item of an array\n        }\n    }\n  }, []);\n\n\n  // Assume user's email is stored in session storage\n  const email = user.Email;\n  const TestId = activeTab === 0 ? 0 : 3;\n  \n  useEffect(() => {\n    const fetchRecentWords = async () => {\n      try {\n        const response = await axios.get(`/api/Learns/recent`, {\n          params: { Email: email, numwords: 10 }\n        });\n        setRecentWords(response.data);\n      } catch (error) {\n        console.error('Failed to fetch recent words:', error);\n      }\n    };\n\n    const fetchLeastLearnedWords = async () => {\n      try {\n        const response = await axios.get(`/api/Learns/least`, {\n          params: { Email: email, TestId: testId, numwords: 10 }\n        });\n        setLeastLearnedWords(response.data);\n      } catch (error) {\n        console.error('Failed to fetch least learned words:', error);\n      }\n    };\n\n    const fetchProgress = async () => {\n      try {\n        const response = await axios.get(`/api/Learns/progress`, {\n          params: { Email: email, TestId: testId }\n        });\n        setProgressPercentage(`Progress: ${response.data.progress}%`);\n      } catch (error) {\n        console.error('Failed to fetch progress:', error);\n      }\n    };\n\n    if (email) {\n      fetchRecentWords();\n      fetchLeastLearnedWords();\n      fetchProgress();\n    }\n  }, [email, testId]);\n\n  const handleSliderChange = (event, newValue) => {\n    setTestId(newValue);\n  };\n\n  return (\n    <Box sx={{ width: '100%', typography: 'body1', padding: 2 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Learning Progress Dashboard\n      </Typography>\n      <Slider\n        value={testId}\n        onChange={handleSliderChange}\n        aria-labelledby=\"test-id-slider\"\n        valueLabelDisplay=\"auto\"\n        min={1}\n        max={100}\n      />\n\n      <Typography variant=\"h6\" gutterBottom>\n        Recently Learned Words\n      </Typography>\n      <List>\n        {recentWords.map((word, index) => (\n          <ListItem key={index}>\n            <ListItemText primary={word.word} secondary={`Meaning: ${word.meaning}`} />\n          </ListItem>\n        ))}\n      </List>\n\n      <Typography variant=\"h6\" gutterBottom>\n        Words to Improve\n      </Typography>\n      <List>\n        {leastLearnedWords.map((word, index) => (\n          <ListItem key={index}>\n            <ListItemText primary={word.word} secondary={`Meaning: ${word.meaning}`} />\n          </ListItem>\n        ))}\n      </List>\n\n      <Typography variant=\"h6\" gutterBottom>\n        {progressPercentage}\n      </Typography>\n    </Box>\n  );\n}\n\nexport default Progress;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}