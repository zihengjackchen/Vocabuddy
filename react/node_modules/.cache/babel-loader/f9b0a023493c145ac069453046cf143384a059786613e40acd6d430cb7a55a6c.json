{"ast":null,"code":"var _jsxFileName = \"/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Schools/Schools.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Tab, Tabs, TextField, Typography, List, ListItem, ListItemText, Button } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Schools() {\n  _s();\n  const [words, setWords] = useState([]);\n  const [activeTab, setActiveTab] = useState(0); // 0 for GRE, 1 for TOEFL\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    fetchWords();\n  }, [activeTab, searchQuery]);\n  const fetchWords = async () => {\n    try {\n      const response = await axios.get(`https://api.example.com/words?test=${activeTab === 0 ? 'GRE' : 'TOEFL'}&query=${searchQuery}`);\n      setWords(response.data); // Adjust based on actual API response structure\n    } catch (error) {\n      console.error('Failed to fetch words:', error);\n      setWords([]); // Clear previous words on error\n    }\n  };\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      typography: 'body1'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      value: activeTab,\n      onChange: handleTabChange,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"GRE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"TOEFL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Search words\",\n      variant: \"outlined\",\n      value: searchQuery,\n      onChange: handleSearchChange,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: words.map((word, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: word.word,\n          secondary: `${word.partOfSpeech} - ${word.description}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"[Need API for pulling multiple schools given range]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      my: 2,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Schools, \"B3C2Gm7ER0Amv44sdfIZ6XJLajA=\");\n_c = Schools;\nexport default Schools;\nvar _c;\n$RefreshReg$(_c, \"Schools\");","map":{"version":3,"names":["React","useState","useEffect","Box","Tab","Tabs","TextField","Typography","List","ListItem","ListItemText","Button","axios","jsxDEV","_jsxDEV","Schools","_s","words","setWords","activeTab","setActiveTab","searchQuery","setSearchQuery","fetchWords","response","get","data","error","console","handleTabChange","event","newValue","handleSearchChange","target","value","sx","width","typography","children","onChange","centered","label","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","variant","margin","map","word","index","primary","secondary","partOfSpeech","description","gutterBottom","display","justifyContent","my","_c","$RefreshReg$"],"sources":["/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Schools/Schools.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Tab, Tabs, TextField, Typography, List, ListItem, ListItemText, Button } from '@mui/material';\nimport axios from 'axios';\n\ninterface WordData {\n  word: string;\n  description: string;\n  partOfSpeech: string;\n}\n\nfunction Schools() {\n  const [words, setWords] = useState<WordData[]>([]);\n  const [activeTab, setActiveTab] = useState(0);  // 0 for GRE, 1 for TOEFL\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    fetchWords();\n  }, [activeTab, searchQuery]);\n\n  const fetchWords = async () => {\n    try {\n      const response = await axios.get(`https://api.example.com/words?test=${activeTab === 0 ? 'GRE' : 'TOEFL'}&query=${searchQuery}`);\n      setWords(response.data); // Adjust based on actual API response structure\n    } catch (error) {\n      console.error('Failed to fetch words:', error);\n      setWords([]);  // Clear previous words on error\n    }\n  };\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setActiveTab(newValue);\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n  };\n\n  return (\n    <Box sx={{ width: '100%', typography: 'body1' }}>\n      <Tabs value={activeTab} onChange={handleTabChange} centered>\n        <Tab label=\"GRE\" />\n        <Tab label=\"TOEFL\" />\n      </Tabs>\n      <TextField\n        fullWidth\n        label=\"Search words\"\n        variant=\"outlined\"\n        value={searchQuery}\n        onChange={handleSearchChange}\n        margin=\"normal\"\n      />\n      <List>\n        {words.map((word, index) => (\n          <ListItem key={index}>\n            <ListItemText primary={word.word} secondary={`${word.partOfSpeech} - ${word.description}`} />\n          </ListItem>\n        ))}\n      </List>\n      {/* Pagination placeholder */}\n      <Typography variant=\"h6\" gutterBottom>[Need API for pulling multiple schools given range]</Typography>\n      \n      <Box display=\"flex\" justifyContent=\"center\" my={2}>\n        <Button>Previous</Button>\n        <Button>Next</Button>\n      </Box>\n    </Box>\n    \n  );\n}\n\nexport default Schools;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}