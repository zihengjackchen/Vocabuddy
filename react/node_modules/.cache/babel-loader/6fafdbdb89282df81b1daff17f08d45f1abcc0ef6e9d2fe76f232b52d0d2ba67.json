{"ast":null,"code":"var _jsxFileName = \"/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Progress/Progress.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Typography, Tab, Tabs, List, ListItem } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Progress() {\n  _s();\n  const [testName, setTestName] = useState('GRE');\n  const [learnedWords, setLearnedWords] = useState([]);\n  const [unlearnedWords, setUnlearnedWords] = useState([]);\n  const userId = '123'; // This should dynamically match the authenticated user's ID\n\n  useEffect(() => {\n    const fetchWords = async () => {\n      try {\n        const learnedResponse = await axios.get(`https://api.example.com/learned-words`, {\n          params: {\n            userId,\n            test: testName\n          }\n        });\n        setLearnedWords(learnedResponse.data);\n        const unlearnedResponse = await axios.get(`https://api.example.com/unlearned-words`, {\n          params: {\n            userId,\n            test: testName\n          }\n        });\n        setUnlearnedWords(unlearnedResponse.data);\n      } catch (error) {\n        console.error('Failed to fetch words:', error);\n      }\n    };\n    fetchWords();\n  }, [testName, userId]);\n  const handleTabChange = (event, newValue) => {\n    setTestName(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      typography: 'body1',\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Progress Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: testName,\n      onChange: handleTabChange,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"GRE\",\n        value: \"GRE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"TOEFL\",\n        value: \"TOEFL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Recently Learned Words\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"[Need API for pulling 10 recently learned words given user]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: learnedWords.map((word, index) => /*#__PURE__*/_jsxDEV(ListItem, {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Words to Improve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"[Need API for pulling 10 words to learn]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: unlearnedWords.map((word, index) => /*#__PURE__*/_jsxDEV(ListItem, {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Progress, \"hdSRFzMU9J8KmTw9XAexpJAZ+48=\");\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Typography","Tab","Tabs","List","ListItem","jsxDEV","_jsxDEV","Progress","_s","testName","setTestName","learnedWords","setLearnedWords","unlearnedWords","setUnlearnedWords","userId","fetchWords","learnedResponse","get","params","test","data","unlearnedResponse","error","console","handleTabChange","event","newValue","sx","width","typography","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","centered","label","map","word","index","_c","$RefreshReg$"],"sources":["/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Progress/Progress.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Typography, Tab, Tabs, List, ListItem, ListItemText } from '@mui/material';\n\nfunction Progress() {\n  const [testName, setTestName] = useState('GRE');\n  const [learnedWords, setLearnedWords] = useState([]);\n  const [unlearnedWords, setUnlearnedWords] = useState([]);\n  const userId = '123'; // This should dynamically match the authenticated user's ID\n\n  useEffect(() => {\n    const fetchWords = async () => {\n      try {\n        const learnedResponse = await axios.get(`https://api.example.com/learned-words`, {\n          params: { userId, test: testName }\n        });\n        setLearnedWords(learnedResponse.data);\n\n        const unlearnedResponse = await axios.get(`https://api.example.com/unlearned-words`, {\n          params: { userId, test: testName }\n        });\n        setUnlearnedWords(unlearnedResponse.data);\n      } catch (error) {\n        console.error('Failed to fetch words:', error);\n      }\n    };\n\n    fetchWords();\n  }, [testName, userId]);\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: string) => {\n    setTestName(newValue);\n  };\n\n  return (\n    <Box sx={{ width: '100%', typography: 'body1', padding: 2 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Progress Dashboard\n      </Typography>\n      <Tabs value={testName} onChange={handleTabChange} centered>\n        <Tab label=\"GRE\" value=\"GRE\" />\n        <Tab label=\"TOEFL\" value=\"TOEFL\" />\n      </Tabs>\n\n      <Typography variant=\"h6\" gutterBottom>\n        Recently Learned Words\n      </Typography>\n      <Typography variant=\"h6\" gutterBottom>[Need API for pulling 10 recently learned words given user]</Typography>\n\n      <List>\n        {learnedWords.map((word, index) => (\n          <ListItem key={index}>\n            {/* <ListItemText primary={word.word} secondary={`Meaning: ${word.meaning}`} /> */}\n            {/* <ListItemText primary={word.word} secondary={`Meaning: ${word.meaning}`} /> */}\n          </ListItem>\n        ))}\n      </List>\n\n      <Typography variant=\"h6\" gutterBottom>\n        Words to Improve\n      </Typography>\n      <Typography variant=\"h6\" gutterBottom>[Need API for pulling 10 words to learn]</Typography>\n\n      <List>\n        {unlearnedWords.map((word, index) => (\n          <ListItem key={index}>\n            {/* <ListItemText primary={word.word} secondary={`Meaning: ${word.meaning}`} /> */}\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n}\n\nexport default Progress;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}