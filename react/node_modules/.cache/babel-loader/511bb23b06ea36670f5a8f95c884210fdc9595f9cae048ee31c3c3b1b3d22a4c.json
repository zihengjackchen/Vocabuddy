{"ast":null,"code":"var _jsxFileName = \"/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Friends/Friends.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Accordion, AccordionDetails, AccordionSummary, List, ListItem, ListItemText, Typography, Paper } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Friends = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [friendsData, setFriendsData] = useState(new Map());\n  useEffect(() => {\n    const rawData = sessionStorage.getItem('user');\n    if (rawData) {\n      const savedData = JSON.parse(rawData);\n      if (savedData && savedData[0]) {\n        setUser(savedData[0]);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (user) {\n      const fetchFriends = async () => {\n        try {\n          const response = await axios.get('/api/IsFriendWith', {\n            params: {\n              Email: user.Email\n            }\n          });\n          const friendsMap = new Map();\n          response.data.forEach(item => {\n            const entries = friendsMap.get(item.FriendEmail) || [];\n            friendsMap.set(item.FriendEmail, [...entries, item]);\n          });\n          setFriendsData(friendsMap);\n        } catch (error) {\n          console.error('Failed to fetch friends:', error);\n        }\n      };\n      fetchFriends();\n    }\n  }, [user]);\n  const formatDate = date => {\n    return new Date(date).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    style: {\n      margin: '16px',\n      padding: '16px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      component: \"div\",\n      style: {\n        marginBottom: '12px'\n      },\n      children: \"Friends List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Array.from(friendsData.entries()).map(([email, records]) => /*#__PURE__*/_jsxDEV(Accordion, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 43\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: [email, \" - \", records.length, \" Tests\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: records.map((record, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              style: {\n                backgroundColor: '#f0f0f0',\n                padding: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `Test ID: ${record.TestId}, Progress: ${record.Progress}%`,\n                secondary: `Last active: ${formatDate(record.LastActiveTime)}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, email, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Friends, \"JQXFUFchGTlFOyj5TjV4NTgk67U=\");\n_c = Friends;\nexport default Friends;\nvar _c;\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"names":["React","useState","useEffect","Accordion","AccordionDetails","AccordionSummary","List","ListItem","ListItemText","Typography","Paper","ExpandMoreIcon","axios","jsxDEV","_jsxDEV","Friends","_s","user","setUser","friendsData","setFriendsData","Map","rawData","sessionStorage","getItem","savedData","JSON","parse","fetchFriends","response","get","params","Email","friendsMap","data","forEach","item","entries","FriendEmail","set","error","console","formatDate","date","Date","toLocaleTimeString","hour","minute","elevation","style","margin","padding","children","variant","component","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","map","email","records","expandIcon","length","record","index","backgroundColor","primary","TestId","Progress","secondary","LastActiveTime","_c","$RefreshReg$"],"sources":["/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Friends/Friends.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Accordion, AccordionDetails, AccordionSummary, List, ListItem, ListItemText, Typography, Paper } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport axios from 'axios';\nimport { friend_progress } from '../../Types';\n\nconst Friends: React.FC = () => {\n  const [user, setUser] = useState<any>(null);\n  const [friendsData, setFriendsData] = useState<Map<string, friend_progress[]>>(new Map());\n\n  useEffect(() => {\n    const rawData = sessionStorage.getItem('user');\n    if (rawData) {\n      const savedData = JSON.parse(rawData);\n      if (savedData && savedData[0]) {\n        setUser(savedData[0]);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      const fetchFriends = async () => {\n        try {\n          const response = await axios.get('/api/IsFriendWith', { params: { Email: user.Email } });\n          const friendsMap = new Map<string, friend_progress[]>();\n          response.data.forEach((item: friend_progress) => {\n            const entries = friendsMap.get(item.FriendEmail) || [];\n            friendsMap.set(item.FriendEmail, [...entries, item]);\n          });\n          setFriendsData(friendsMap);\n        } catch (error) {\n          console.error('Failed to fetch friends:', error);\n        }\n      };\n      fetchFriends();\n    }\n  }, [user]);\n\n  const formatDate = (date: string): string => {\n    return new Date(date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  return (\n    <Paper elevation={3} style={{ margin: '16px', padding: '16px' }}>\n      <Typography variant=\"h6\" component=\"div\" style={{ marginBottom: '12px' }}>\n        Friends List\n      </Typography>\n      <div>\n        {Array.from(friendsData.entries()).map(([email, records]) => (\n          <Accordion key={email}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography>{email} - {records.length} Tests</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <List>\n                {records.map((record, index) => (\n                  <ListItem key={index} style={{ backgroundColor: '#f0f0f0', padding: '10px' }}>\n                    <ListItemText\n                      primary={`Test ID: ${record.TestId}, Progress: ${record.Progress}%`}\n                      secondary={`Last active: ${formatDate(record.LastActiveTime)}`}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            </AccordionDetails>\n          </Accordion>\n        ))}\n      </div>\n    </Paper>\n  );\n};\n\nexport default Friends;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}