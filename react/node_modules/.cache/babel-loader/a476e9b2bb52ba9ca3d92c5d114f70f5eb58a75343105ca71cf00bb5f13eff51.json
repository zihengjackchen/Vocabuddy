{"ast":null,"code":"var _jsxFileName = \"/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Progress/Progress.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Box, Typography, Tab, Tabs, List, ListItem, ListItemText } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://35.208.70.236/';\nfunction Progress() {\n  _s();\n  const [activeTab, setActiveTab] = useState(0); // 0 for GRE, 1 for TOEFL\n  const [recentWords, setRecentWords] = useState([]);\n  const [leastLearnedWords, setLeastLearnedWords] = useState([]);\n  const [progressPercentage, setProgressPercentage] = useState([]);\n  const {\n    Email\n  } = useParams();\n  const testId = activeTab === 0 ? 0 : 3;\n  useEffect(() => {\n    if (Email) {\n      const fetchRecentWords = async () => {\n        try {\n          const response = await axios.get(`/api/Learns/recent`, {\n            params: {\n              Email,\n              numwords: 10\n            }\n          });\n          setRecentWords(response.data);\n        } catch (error) {\n          console.error('Failed to fetch recent words:', error);\n        }\n      };\n      const fetchLeastLearnedWords = async () => {\n        try {\n          const response = await axios.get(`/api/Learns/least`, {\n            params: {\n              Email,\n              TestId: testId,\n              numwords: 10\n            }\n          });\n          setLeastLearnedWords(response.data);\n        } catch (error) {\n          console.error('Failed to fetch least learned words:', error);\n        }\n      };\n      const fetchProgress = async () => {\n        try {\n          const response = await axios.get(`/api/Learns/progress`, {\n            params: {\n              Email,\n              TestId: testId\n            }\n          });\n          setProgressPercentage(response.data);\n        } catch (error) {\n          console.error('Failed to fetch progress:', error);\n        }\n      };\n      fetchRecentWords();\n      fetchLeastLearnedWords();\n      fetchProgress();\n    }\n  }, [Email, testId]);\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      typography: 'body1',\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Learning Progress Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: activeTab,\n      onChange: handleTabChange,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"GRE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"TOEFL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Recently Learned Words\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: recentWords.map((word, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: word.Word,\n          secondary: `LastLearnedTime: ${word.LastLearnedTime}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Words to Improve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: leastLearnedWords.map((word, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: word.Word,\n          secondary: `PercentLearned: ${word.PercentLearned}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: progressPercentage.map((test, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `Test ID: ${test.TestId}`,\n          secondary: `Progress: ${test.Progress}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Progress, \"3UXhfbDWmn94+nMDQUFWsz31dRw=\", false, function () {\n  return [useParams];\n});\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","Box","Typography","Tab","Tabs","List","ListItem","ListItemText","jsxDEV","_jsxDEV","defaults","baseURL","Progress","_s","activeTab","setActiveTab","recentWords","setRecentWords","leastLearnedWords","setLeastLearnedWords","progressPercentage","setProgressPercentage","Email","testId","fetchRecentWords","response","get","params","numwords","data","error","console","fetchLeastLearnedWords","TestId","fetchProgress","handleTabChange","event","newValue","sx","width","typography","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","centered","label","map","word","index","primary","Word","secondary","LastLearnedTime","PercentLearned","test","_c","$RefreshReg$"],"sources":["/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Progress/Progress.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Box, Typography, Tab, Tabs, List, ListItem, ListItemText } from '@mui/material';\nimport { recent, least, progress } from '../../Types';\n\naxios.defaults.baseURL = 'http://35.208.70.236/';\n\nfunction Progress() {\n  const [activeTab, setActiveTab] = useState(0); // 0 for GRE, 1 for TOEFL\n  const [recentWords, setRecentWords] = useState<recent[]>([]);\n  const [leastLearnedWords, setLeastLearnedWords] = useState<least[]>([]);\n  const [progressPercentage, setProgressPercentage] = useState<progress[]>([]);\n\n  const { Email } = useParams<{ Email: string }>();\n  const testId = activeTab === 0 ? 0 : 3;\n\n  useEffect(() => {\n    if (Email) {\n      const fetchRecentWords = async () => {\n        try {\n          const response = await axios.get(`/api/Learns/recent`, {\n            params: { Email, numwords: 10 }\n          });\n          setRecentWords(response.data);\n        } catch (error) {\n          console.error('Failed to fetch recent words:', error);\n        }\n      };\n\n      const fetchLeastLearnedWords = async () => {\n        try {\n          const response = await axios.get(`/api/Learns/least`, {\n            params: { Email, TestId: testId, numwords: 10 }\n          });\n          setLeastLearnedWords(response.data);\n        } catch (error) {\n          console.error('Failed to fetch least learned words:', error);\n        }\n      };\n\n      const fetchProgress = async () => {\n        try {\n          const response = await axios.get(`/api/Learns/progress`, {\n            params: { Email, TestId: testId }\n          });\n          setProgressPercentage(response.data);\n        } catch (error) {\n          console.error('Failed to fetch progress:', error);\n        }\n      };\n\n      fetchRecentWords();\n      fetchLeastLearnedWords();\n      fetchProgress();\n    }\n  }, [Email, testId]);\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setActiveTab(newValue);\n  };\n\n  return (\n    <Box sx={{ width: '100%', typography: 'body1', padding: 2 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Learning Progress Dashboard\n      </Typography>\n      <Tabs value={activeTab} onChange={handleTabChange} centered>\n        <Tab label=\"GRE\" />\n        <Tab label=\"TOEFL\" />\n      </Tabs>\n\n      <Typography variant=\"h6\" gutterBottom>\n        Recently Learned Words\n      </Typography>\n      <List>\n        {recentWords.map((word, index) => (\n          <ListItem key={index}>\n            <ListItemText primary={word.Word} secondary={`LastLearnedTime: ${word.LastLearnedTime}`} />\n          </ListItem>\n        ))}\n      </List>\n\n      <Typography variant=\"h6\" gutterBottom>\n        Words to Improve\n      </Typography>\n      <List>\n        {leastLearnedWords.map((word, index) => (\n          <ListItem key={index}>\n            <ListItemText primary={word.Word} secondary={`PercentLearned: ${word.PercentLearned}`} />\n          </ListItem>\n        ))}\n      </List>\n\n      <Typography variant=\"h6\" gutterBottom>\n        {progressPercentage.map((test, index) => (\n          <ListItem key={index}>\n            <ListItemText primary={`Test ID: ${test.TestId}`} secondary={`Progress: ${test.Progress}%`} />\n          </ListItem>\n        ))}\n      </Typography>\n    </Box>\n  );\n}\n\nexport default Progress;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,GAAG,EAAEC,UAAU,EAAEC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzFV,KAAK,CAACW,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAEhD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAW,EAAE,CAAC;EAC5D,MAAM,CAACqB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtB,QAAQ,CAAU,EAAE,CAAC;EACvE,MAAM,CAACuB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGxB,QAAQ,CAAa,EAAE,CAAC;EAE5E,MAAM;IAAEyB;EAAM,CAAC,GAAGtB,SAAS,CAAoB,CAAC;EAChD,MAAMuB,MAAM,GAAGT,SAAS,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;EAEtChB,SAAS,CAAC,MAAM;IACd,IAAIwB,KAAK,EAAE;MACT,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;QACnC,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAAE,oBAAmB,EAAE;YACrDC,MAAM,EAAE;cAAEL,KAAK;cAAEM,QAAQ,EAAE;YAAG;UAChC,CAAC,CAAC;UACFX,cAAc,CAACQ,QAAQ,CAACI,IAAI,CAAC;QAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACvD;MACF,CAAC;MAED,MAAME,sBAAsB,GAAG,MAAAA,CAAA,KAAY;QACzC,IAAI;UACF,MAAMP,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAAE,mBAAkB,EAAE;YACpDC,MAAM,EAAE;cAAEL,KAAK;cAAEW,MAAM,EAAEV,MAAM;cAAEK,QAAQ,EAAE;YAAG;UAChD,CAAC,CAAC;UACFT,oBAAoB,CAACM,QAAQ,CAACI,IAAI,CAAC;QACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC9D;MACF,CAAC;MAED,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;QAChC,IAAI;UACF,MAAMT,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAAE,sBAAqB,EAAE;YACvDC,MAAM,EAAE;cAAEL,KAAK;cAAEW,MAAM,EAAEV;YAAO;UAClC,CAAC,CAAC;UACFF,qBAAqB,CAACI,QAAQ,CAACI,IAAI,CAAC;QACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACnD;MACF,CAAC;MAEDN,gBAAgB,CAAC,CAAC;MAClBQ,sBAAsB,CAAC,CAAC;MACxBE,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACZ,KAAK,EAAEC,MAAM,CAAC,CAAC;EAEnB,MAAMY,eAAe,GAAGA,CAACC,KAA2B,EAAEC,QAAgB,KAAK;IACzEtB,YAAY,CAACsB,QAAQ,CAAC;EACxB,CAAC;EAED,oBACE5B,OAAA,CAACR,GAAG;IAACqC,EAAE,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,UAAU,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAC1DjC,OAAA,CAACP,UAAU;MAACyC,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbvC,OAAA,CAACL,IAAI;MAAC6C,KAAK,EAAEnC,SAAU;MAACoC,QAAQ,EAAEf,eAAgB;MAACgB,QAAQ;MAAAT,QAAA,gBACzDjC,OAAA,CAACN,GAAG;QAACiD,KAAK,EAAC;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnBvC,OAAA,CAACN,GAAG;QAACiD,KAAK,EAAC;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eAEPvC,OAAA,CAACP,UAAU;MAACyC,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbvC,OAAA,CAACJ,IAAI;MAAAqC,QAAA,EACF1B,WAAW,CAACqC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3B9C,OAAA,CAACH,QAAQ;QAAAoC,QAAA,eACPjC,OAAA,CAACF,YAAY;UAACiD,OAAO,EAAEF,IAAI,CAACG,IAAK;UAACC,SAAS,EAAG,oBAAmBJ,IAAI,CAACK,eAAgB;QAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAD9EO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEPvC,OAAA,CAACP,UAAU;MAACyC,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbvC,OAAA,CAACJ,IAAI;MAAAqC,QAAA,EACFxB,iBAAiB,CAACmC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjC9C,OAAA,CAACH,QAAQ;QAAAoC,QAAA,eACPjC,OAAA,CAACF,YAAY;UAACiD,OAAO,EAAEF,IAAI,CAACG,IAAK;UAACC,SAAS,EAAG,mBAAkBJ,IAAI,CAACM,cAAe;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAD5EO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEPvC,OAAA,CAACP,UAAU;MAACyC,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAClCtB,kBAAkB,CAACiC,GAAG,CAAC,CAACQ,IAAI,EAAEN,KAAK,kBAClC9C,OAAA,CAACH,QAAQ;QAAAoC,QAAA,eACPjC,OAAA,CAACF,YAAY;UAACiD,OAAO,EAAG,YAAWK,IAAI,CAAC5B,MAAO,EAAE;UAACyB,SAAS,EAAG,aAAYG,IAAI,CAACjD,QAAS;QAAG;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADjFO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACnC,EAAA,CA/FQD,QAAQ;EAAA,QAMGZ,SAAS;AAAA;AAAA8D,EAAA,GANpBlD,QAAQ;AAiGjB,eAAeA,QAAQ;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}