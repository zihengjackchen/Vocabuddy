{"ast":null,"code":"var _jsxFileName = \"/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Words/Words.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Tab, Tabs, Typography, List, ListItem, ListItemText, Button } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://35.208.70.236/';\nfunction Words() {\n  _s();\n  const [words, setWords] = useState([]);\n  const [activeTab, setActiveTab] = useState(0); // 0 for GRE, 1 for TOEFL\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    fetchWords();\n  }, [activeTab]);\n  const fetchWords = async () => {\n    try {\n      const response = await axios.get(`https://api.example.com/words?test=${activeTab === 0 ? 'GRE' : 'TOEFL'}`);\n      setWords(response.data); // Adjust based on actual API response structure\n    } catch (error) {\n      console.error('Failed to fetch words:', error);\n      setWords([]); // Clear previous words on error\n    }\n  };\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  const handleWordClick = wordId => {\n    const testId = activeTab === 0 ? 'GRE' : 'TOEFL';\n    history.push(`/words/${testId}/${wordId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      typography: 'body1'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      value: activeTab,\n      onChange: handleTabChange,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"GRE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"TOEFL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: words.map(word => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => handleWordClick(word.id),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: word.word,\n          secondary: `${word.partOfSpeech} - ${word.description}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, word.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"[Need API for pulling 20 words at a time given a range]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      my: 2,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Words, \"B3C2Gm7ER0Amv44sdfIZ6XJLajA=\");\n_c = Words;\nexport default Words;\nvar _c;\n$RefreshReg$(_c, \"Words\");","map":{"version":3,"names":["React","useState","useEffect","Box","Tab","Tabs","Typography","List","ListItem","ListItemText","Button","axios","jsxDEV","_jsxDEV","defaults","baseURL","Words","_s","words","setWords","activeTab","setActiveTab","searchQuery","setSearchQuery","fetchWords","response","get","data","error","console","handleTabChange","event","newValue","handleWordClick","wordId","testId","history","push","sx","width","typography","children","value","onChange","centered","label","fileName","_jsxFileName","lineNumber","columnNumber","map","word","button","onClick","id","primary","secondary","partOfSpeech","description","variant","gutterBottom","display","justifyContent","my","_c","$RefreshReg$"],"sources":["/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Words/Words.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Tab, Tabs, TextField, Typography, List, ListItem, ListItemText, Button } from '@mui/material';\nimport axios from 'axios';\n\nimport { word } from '../../Types'\n\naxios.defaults.baseURL = 'http://35.208.70.236/';\n\nfunction Words() {\n  const [words, setWords] = useState<WordData[]>([]);\n  const [activeTab, setActiveTab] = useState(0);  // 0 for GRE, 1 for TOEFL\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    fetchWords();\n  }, [activeTab]);\n\n  const fetchWords = async () => {\n    try {\n      const response = await axios.get(`https://api.example.com/words?test=${activeTab === 0 ? 'GRE' : 'TOEFL'}`);\n      setWords(response.data); // Adjust based on actual API response structure\n    } catch (error) {\n      console.error('Failed to fetch words:', error);\n      setWords([]);  // Clear previous words on error\n    }\n  };\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setActiveTab(newValue);\n  };\n\n  const handleWordClick = (wordId: string) => {\n    const testId = activeTab === 0 ? 'GRE' : 'TOEFL';\n    history.push(`/words/${testId}/${wordId}`);\n  };\n\n  return (\n    <Box sx={{ width: '100%', typography: 'body1' }}>\n      <Tabs value={activeTab} onChange={handleTabChange} centered>\n        <Tab label=\"GRE\" />\n        <Tab label=\"TOEFL\" />\n      </Tabs>\n      <List>\n        {words.map((word) => (\n          <ListItem key={word.id} button onClick={() => handleWordClick(word.id)}>\n            <ListItemText\n              primary={word.word}\n              secondary={`${word.partOfSpeech} - ${word.description}`}\n            />\n          </ListItem>\n        ))}\n      </List>\n      {/* Pagination placeholder */}\n      <Typography variant=\"h6\" gutterBottom>[Need API for pulling 20 words at a time given a range]</Typography>\n      <Box display=\"flex\" justifyContent=\"center\" my={2}>\n        <Button>Previous</Button>\n        <Button>Next</Button>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Words;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}