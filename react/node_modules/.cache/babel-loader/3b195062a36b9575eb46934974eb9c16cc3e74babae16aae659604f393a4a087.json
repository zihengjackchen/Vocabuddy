{"ast":null,"code":"var _jsxFileName = \"/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Study/Study.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Typography, Chip, Button, Grid, Tab, Tabs } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Ensure your School type has a non-optional SchoolId of type number\n\nfunction WordsGrid() {\n  _s();\n  const [words, setWords] = useState([]);\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [activeTab, setActiveTab] = useState(0); // 0 for GRE, 1 for TOEFL\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  useEffect(() => {\n    // Load user data from session storage\n    const rawData = sessionStorage.getItem('user');\n    if (rawData) {\n      const savedData = JSON.parse(rawData);\n      if (savedData && savedData[0]) {\n        // Ensure savedData is not empty\n        setUser(savedData[0]); // Assuming you want the first item of an array\n      }\n    }\n  }, []);\n  useEffect(() => {\n    fetchWords();\n  }, []);\n  const fetchWords = async () => {\n    try {\n      const response = await axios.get('/api/Study');\n      setWords(response.data);\n    } catch (error) {\n      console.error('Failed to fetch words:', error);\n      setWords([]);\n    }\n  };\n  const handleLearnClick = word => {\n    axios.post('/api/Learns/modify', {\n      Email: user.Email,\n      TestId: 0,\n      // Assuming TestId is always 0 for learning words\n      WordId: /*#__PURE__*/_jsxDEV(\"word\", {\n        className: \"WordI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this),\n      PercentLearned: 0 // Update value based on user interaction\n    }).then(() => console.log('Learning progress updated')).catch(error => console.error('Failed to update learning progress:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      value: activeTab,\n      onChange: handleTabChange,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"GRE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"TOEFL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: words.map(word => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"100vh\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              minWidth: 275,\n              maxWidth: 600,\n              mt: 5\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                gutterBottom: true,\n                component: \"div\",\n                color: \"primary\",\n                children: word.Word\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: word.PartOfSpeech,\n                color: \"secondary\",\n                sx: {\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                gutterBottom: true,\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this), \" \", word.Description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                gutterBottom: true,\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Stem:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this), \" \", word.Stem]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Example:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this), \" \", word.Example]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => handleLearnClick(word),\n                children: \"Learn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, word.Word, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(WordsGrid, \"S04MWzeTiMXstmiSQucwU9sJSDQ=\", false, function () {\n  return [useNavigate];\n});\n_c = WordsGrid;\nexport default WordsGrid;\nvar _c;\n$RefreshReg$(_c, \"WordsGrid\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","Chip","Button","Grid","Tab","Tabs","useNavigate","axios","jsxDEV","_jsxDEV","WordsGrid","_s","words","setWords","navigate","user","setUser","activeTab","setActiveTab","handleTabChange","event","newValue","rawData","sessionStorage","getItem","savedData","JSON","parse","fetchWords","response","get","data","error","console","handleLearnClick","word","post","Email","TestId","WordId","className","fileName","_jsxFileName","lineNumber","columnNumber","PercentLearned","then","log","catch","sx","width","children","value","onChange","centered","label","container","spacing","map","item","xs","md","lg","display","flexDirection","alignItems","justifyContent","height","minWidth","maxWidth","mt","variant","gutterBottom","component","color","Word","PartOfSpeech","mb","Description","Stem","Example","onClick","_c","$RefreshReg$"],"sources":["/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Study/Study.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Typography, Chip, Button, Grid, Tab, Tabs } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { word } from '../../Types';  // Ensure your School type has a non-optional SchoolId of type number\n\nfunction WordsGrid() {\n  const [words, setWords] = useState<word[]>([]);\n  const navigate = useNavigate();\n  const [user, setUser] = useState<any>(null);\n  const [activeTab, setActiveTab] = useState(0);  // 0 for GRE, 1 for TOEFL\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setActiveTab(newValue);\n  };\n\n  useEffect(() => {\n    // Load user data from session storage\n    const rawData = sessionStorage.getItem('user');\n    if (rawData) {\n        const savedData = JSON.parse(rawData);\n        if (savedData && savedData[0]) { // Ensure savedData is not empty\n            setUser(savedData[0]);       // Assuming you want the first item of an array\n        }\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchWords();\n  }, []);\n\n  const fetchWords = async () => {\n    try {\n      const response = await axios.get('/api/Study');\n      setWords(response.data);\n    } catch (error) {\n      console.error('Failed to fetch words:', error);\n      setWords([]);\n    }\n  };\n\n  const handleLearnClick = (word: word) => {\n\n    axios.post('/api/Learns/modify', {\n      Email: user.Email,\n      TestId: 0, // Assuming TestId is always 0 for learning words\n      WordId: <word className=\"WordI\"></word>,\n      PercentLearned: 0, // Update value based on user interaction\n    })\n      .then(() => console.log('Learning progress updated'))\n      .catch((error) => console.error('Failed to update learning progress:', error));\n  };\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Tabs value={activeTab} onChange={handleTabChange} centered>\n        <Tab label=\"GRE\" />\n        <Tab label=\"TOEFL\" />\n      </Tabs>\n      \n      <Grid container spacing={2}>\n        {words.map((word) => (\n          <Grid item key={word.Word} xs={12} md={6} lg={4}>\n            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" height=\"100vh\">\n              <Card sx={{ minWidth: 275, maxWidth: 600, mt: 5 }}>\n                <CardContent>\n                  <Typography variant=\"h4\" gutterBottom component=\"div\" color=\"primary\">\n                    {word.Word}\n                  </Typography>\n                  <Chip label={word.PartOfSpeech} color=\"secondary\" sx={{ mb: 2 }} />\n                  <Typography variant=\"body1\" gutterBottom>\n                    <strong>Description:</strong> {word.Description}\n                  </Typography>\n                  <Typography variant=\"body1\" gutterBottom>\n                    <strong>Stem:</strong> {word.Stem}\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    <strong>Example:</strong> {word.Example}\n                  </Typography>\n                  <Button variant=\"contained\" color=\"primary\" onClick={() => handleLearnClick(word)}>\n                    Learn\n                  </Button>\n                </CardContent>\n              </Card>\n            </Box>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n\nexport default WordsGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}