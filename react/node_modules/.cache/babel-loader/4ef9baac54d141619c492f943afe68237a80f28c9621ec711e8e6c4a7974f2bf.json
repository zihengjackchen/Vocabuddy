{"ast":null,"code":"var _jsxFileName = \"/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Friends/Friends.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { List, ListItem, ListItemText, Typography, Paper } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Friends = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [friendsData, setFriendsData] = useState(new Map());\n  useEffect(() => {\n    const rawData = sessionStorage.getItem('user');\n    if (rawData) {\n      const savedData = JSON.parse(rawData);\n      if (savedData && savedData[0]) {\n        setUser(savedData[0]);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (user) {\n      const fetchFriends = async () => {\n        try {\n          const response = await axios.get('/api/IsFriendWith', {\n            params: {\n              Email: user.Email\n            }\n          });\n          const friendsMap = new Map();\n          response.data.forEach(item => {\n            const entries = friendsMap.get(item.FriendEmail) || [];\n            friendsMap.set(item.FriendEmail, [...entries, item]);\n          });\n          setFriendsData(friendsMap);\n        } catch (error) {\n          console.error('Failed to fetch friends:', error);\n        }\n      };\n      fetchFriends();\n    }\n  }, [user]);\n  const formatDate = date => {\n    return new Date(date).toLocaleDateString(\"en-US\", {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  const getTestName = testId => {\n    return testId === 0 ? 'GRE' : 'TOEFL';\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    style: {\n      margin: '16px',\n      padding: '16px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      component: \"div\",\n      style: {\n        marginBottom: '12px'\n      },\n      children: \"Friends List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: Array.from(friendsData.entries()).map(([email, records]) => {\n        const tests = records.map(record => `${getTestName(record.TestId)}: ${record.Progress}%`).join(', ');\n        const lastActive = `Last active: ${formatDate(records[0].LastActiveTime)}`;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          style: {\n            marginBottom: '10px',\n            backgroundColor: '#f0f0f0',\n            padding: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `${email} - ${tests}`,\n            secondary: lastActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, email, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Friends, \"JQXFUFchGTlFOyj5TjV4NTgk67U=\");\n_c = Friends;\nexport default Friends;\nvar _c;\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"names":["React","useState","useEffect","List","ListItem","ListItemText","Typography","Paper","axios","jsxDEV","_jsxDEV","Friends","_s","user","setUser","friendsData","setFriendsData","Map","rawData","sessionStorage","getItem","savedData","JSON","parse","fetchFriends","response","get","params","Email","friendsMap","data","forEach","item","entries","FriendEmail","set","error","console","formatDate","date","Date","toLocaleDateString","year","month","day","getTestName","testId","elevation","style","margin","padding","children","variant","component","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","map","email","records","tests","record","TestId","Progress","join","lastActive","LastActiveTime","backgroundColor","primary","secondary","_c","$RefreshReg$"],"sources":["/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Friends/Friends.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { List, ListItem, ListItemText, Typography, Paper } from '@mui/material';\nimport axios from 'axios';\nimport { friend_progress } from '../../Types';\n\nconst Friends: React.FC = () => {\n  const [user, setUser] = useState<any>(null);\n  const [friendsData, setFriendsData] = useState<Map<string, friend_progress[]>>(new Map());\n\n  useEffect(() => {\n    const rawData = sessionStorage.getItem('user');\n    if (rawData) {\n      const savedData = JSON.parse(rawData);\n      if (savedData && savedData[0]) {\n        setUser(savedData[0]);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      const fetchFriends = async () => {\n        try {\n          const response = await axios.get('/api/IsFriendWith', { params: { Email: user.Email } });\n          const friendsMap = new Map<string, friend_progress[]>();\n          response.data.forEach((item: friend_progress) => {\n            const entries = friendsMap.get(item.FriendEmail) || [];\n            friendsMap.set(item.FriendEmail, [...entries, item]);\n          });\n          setFriendsData(friendsMap);\n        } catch (error) {\n          console.error('Failed to fetch friends:', error);\n        }\n      };\n      fetchFriends();\n    }\n  }, [user]);\n\n  const formatDate = (date: string): string => {\n    return new Date(date).toLocaleDateString(\"en-US\", { year: 'numeric', month: 'long', day: 'numeric' });\n  };\n\n  const getTestName = (testId: number): string => {\n    return testId === 0 ? 'GRE' : 'TOEFL';\n  };\n\n  return (\n    <Paper elevation={3} style={{ margin: '16px', padding: '16px' }}>\n      <Typography variant=\"h6\" component=\"div\" style={{ marginBottom: '12px' }}>\n        Friends List\n      </Typography>\n      <List>\n        {Array.from(friendsData.entries()).map(([email, records]) => {\n          const tests = records.map(record => `${getTestName(record.TestId)}: ${record.Progress}%`).join(', ');\n          const lastActive = `Last active: ${formatDate(records[0].LastActiveTime)}`;\n          return (\n            <ListItem key={email} style={{ marginBottom: '10px', backgroundColor: '#f0f0f0', padding: '10px' }}>\n              <ListItemText\n                primary={`${email} - ${tests}`}\n                secondary={lastActive}\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Paper>\n  );\n};\n\nexport default Friends;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}