{"ast":null,"code":"var _jsxFileName = \"/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Progress/Progress.tsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Box, Typography, Tab, Tabs } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://35.208.70.236/';\nfunction Progress() {\n  // const [activeTab, setActiveTab] = useState(0); // 0 for GRE, 1 for TOEFL\n  // const [recentWords, setRecentWords] = useState<recent[]>([]);\n  // const [leastLearnedWords, setLeastLearnedWords] = useState<least[]>([]);\n  // const [progressPercentage, setProgressPercentage] = useState<progress[]>([]);\n\n  // const { Email } = useParams<{ Email: string }>();\n  // const testId = activeTab === 0 ? 0 : 3;\n\n  // const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n  //   setActiveTab(newValue);\n  // };\n\n  // useEffect(() => {\n  //   const fetchRecentWords = async () => {\n  //       try {\n  //         const response = await axios.get(`/api/Learns/recent`, {\n  //           params: { Email, numwords: 10 }\n  //         });\n  //         setRecentWords(response.data);\n  //       } catch (error) {\n  //         console.error('Failed to fetch recent words:', error);\n  //       }\n  //     };\n\n  //     const fetchLeastLearnedWords = async () => {\n  //       try {\n  //         const response = await axios.get(`/api/Learns/least`, {\n  //           params: { Email, TestId: testId, numwords: 10 }\n  //         });\n  //         setLeastLearnedWords(response.data);\n  //       } catch (error) {\n  //         console.error('Failed to fetch least learned words:', error);\n  //       }\n  //     };\n\n  //     const fetchProgress = async () => {\n  //       try {\n  //         const response = await axios.get(`/api/Learns/progress`, {\n  //           params: { Email, TestId: testId }\n  //         });\n  //         setProgressPercentage(response.data);\n  //       } catch (error) {\n  //         console.error('Failed to fetch progress:', error);\n  //       }\n  //     };\n\n  //     // fetchRecentWords();\n  //     // fetchLeastLearnedWords();\n  //     // fetchProgress();\n\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      typography: 'body1',\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Learning Progress Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: activeTab,\n      onChange: handleTabChange,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"GRE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"TOEFL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["React","axios","Box","Typography","Tab","Tabs","jsxDEV","_jsxDEV","defaults","baseURL","Progress","sx","width","typography","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","value","activeTab","onChange","handleTabChange","centered","label","_c","$RefreshReg$"],"sources":["/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Progress/Progress.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Box, Typography, Tab, Tabs, List, ListItem, ListItemText } from '@mui/material';\nimport { recent, least, progress } from '../../Types';\n\naxios.defaults.baseURL = 'http://35.208.70.236/';\n\nfunction Progress() {\n  // const [activeTab, setActiveTab] = useState(0); // 0 for GRE, 1 for TOEFL\n  // const [recentWords, setRecentWords] = useState<recent[]>([]);\n  // const [leastLearnedWords, setLeastLearnedWords] = useState<least[]>([]);\n  // const [progressPercentage, setProgressPercentage] = useState<progress[]>([]);\n\n  // const { Email } = useParams<{ Email: string }>();\n  // const testId = activeTab === 0 ? 0 : 3;\n\n  // const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n  //   setActiveTab(newValue);\n  // };\n\n  // useEffect(() => {\n  //   const fetchRecentWords = async () => {\n  //       try {\n  //         const response = await axios.get(`/api/Learns/recent`, {\n  //           params: { Email, numwords: 10 }\n  //         });\n  //         setRecentWords(response.data);\n  //       } catch (error) {\n  //         console.error('Failed to fetch recent words:', error);\n  //       }\n  //     };\n\n  //     const fetchLeastLearnedWords = async () => {\n  //       try {\n  //         const response = await axios.get(`/api/Learns/least`, {\n  //           params: { Email, TestId: testId, numwords: 10 }\n  //         });\n  //         setLeastLearnedWords(response.data);\n  //       } catch (error) {\n  //         console.error('Failed to fetch least learned words:', error);\n  //       }\n  //     };\n\n  //     const fetchProgress = async () => {\n  //       try {\n  //         const response = await axios.get(`/api/Learns/progress`, {\n  //           params: { Email, TestId: testId }\n  //         });\n  //         setProgressPercentage(response.data);\n  //       } catch (error) {\n  //         console.error('Failed to fetch progress:', error);\n  //       }\n  //     };\n\n  //     // fetchRecentWords();\n  //     // fetchLeastLearnedWords();\n  //     // fetchProgress();\n    \n  // }, []);\n\n  \n\n  return (\n    <Box sx={{ width: '100%', typography: 'body1', padding: 2 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Learning Progress Dashboard\n      </Typography>\n      <Tabs value={activeTab} onChange={handleTabChange} centered>\n        <Tab label=\"GRE\" />\n        <Tab label=\"TOEFL\" />\n      </Tabs>\n\n      {/* <Typography variant=\"h6\" gutterBottom>\n        Recently Learned Words\n      </Typography>\n      <List>\n        {recentWords.map((word, index) => (\n          <ListItem key={index}>\n            <ListItemText primary={word.Word} secondary={`LastLearnedTime: ${word.LastLearnedTime}`} />\n          </ListItem>\n        ))}\n      </List> */}\n\n      {/* <Typography variant=\"h6\" gutterBottom>\n        Words to Improve\n      </Typography>\n      <List>\n        {leastLearnedWords.map((word, index) => (\n          <ListItem key={index}>\n            <ListItemText primary={word.Word} secondary={`PercentLearned: ${word.PercentLearned}`} />\n          </ListItem>\n        ))}\n      </List>\n\n      <Typography variant=\"h6\" gutterBottom>\n        {progressPercentage.map((test, index) => (\n          <ListItem key={index}>\n            <ListItemText primary={`Test ID: ${test.TestId}`} secondary={`Progress: ${test.Progress}%`} />\n          </ListItem>\n        ))}\n      </Typography> */}\n    </Box>\n  );\n}\n\nexport default Progress;\n"],"mappings":";AAAA,OAAOA,KAAK,MAA+B,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,GAAG,EAAEC,UAAU,EAAEC,GAAG,EAAEC,IAAI,QAAsC,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzFN,KAAK,CAACO,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAEhD,SAASC,QAAQA,CAAA,EAAG;EAClB;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAIA,oBACEH,OAAA,CAACL,GAAG;IAACS,EAAE,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,UAAU,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAC1DR,OAAA,CAACJ,UAAU;MAACa,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbd,OAAA,CAACF,IAAI;MAACiB,KAAK,EAAEC,SAAU;MAACC,QAAQ,EAAEC,eAAgB;MAACC,QAAQ;MAAAX,QAAA,gBACzDR,OAAA,CAACH,GAAG;QAACuB,KAAK,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnBd,OAAA,CAACH,GAAG;QAACuB,KAAK,EAAC;MAAO;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA+BJ,CAAC;AAEV;AAACO,EAAA,GAhGQlB,QAAQ;AAkGjB,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}