{"ast":null,"code":"var _jsxFileName = \"/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Study/Study.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Typography, Chip, Button, Grid, Tab, Tabs, Collapse, useTheme, CardActions } from '@mui/material';\nimport axios from 'axios';\nimport { formatDistanceToNow, parseISO } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Ensure your School type has a non-optional SchoolId of type number\n\naxios.defaults.baseURL = 'http://35.208.70.236/';\nfunction Study() {\n  _s();\n  const [words, setWords] = useState([]);\n  const [wordDetails, setWordDetails] = useState(undefined);\n  const [user, setUser] = useState(null);\n  const [activeTab, setActiveTab] = useState(0); // 0 for GRE, 1 for TOEFL\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  const theme = useTheme();\n  useEffect(() => {\n    const rawData = sessionStorage.getItem('user');\n    if (rawData) {\n      const savedData = JSON.parse(rawData);\n      if (savedData && savedData[0]) {\n        setUser(savedData[0]);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    fetchWords();\n  }, [activeTab]);\n  const fetchWords = async () => {\n    const TestId = activeTab === 0 ? 0 : 3;\n    try {\n      const response = await axios.get('/api/Study', {\n        params: {\n          Email: user.Email,\n          TestId: TestId\n        }\n      });\n      const processedWords = response.data.map(word => ({\n        ...word,\n        Learn: word.Learned !== undefined ? word.Learned : false // Default to 0 if not provided\n      }));\n      setWords(processedWords);\n    } catch (error) {\n      console.error('Failed to fetch words:', error);\n      setWords([]);\n    }\n  };\n  const handleLearnClick = word_progress => {\n    const updateLearningProgress = currentPercent => {\n      // Calculate the increment based on an exponentially decaying function\n      const distanceFromMax = 100 - currentPercent;\n      const increment = Math.max(3, distanceFromMax * 0.2); // Ensuring minimum increment is 1\n\n      // Update the PercentLearned, ensuring it doesn't exceed 100\n      return Math.min(Math.round(currentPercent + increment), 100);\n    };\n\n    // Calculate the new percent learned before the API call\n    axios.post('/api/Learns/modify', {\n      Email: user.Email,\n      TestId: activeTab === 0 ? 0 : 3,\n      WordId: word_progress.WordId,\n      PercentLearned: updateLearningProgress(word_progress.PercentLearned)\n    }).then(() => {\n      console.log('Learning progress updated');\n      // Ensure we use newPercentLearned within the scope it's defined\n      const newPercentLearned = updateLearningProgress(word_progress.PercentLearned);\n      setWords(words.map(word => {\n        if (word.WordId === word_progress.WordId && word.TestId === word_progress.TestId) {\n          // Also update PercentLearned here, using newPercentLearned directly\n          return {\n            ...word,\n            Learned: true,\n            PercentLearned: newPercentLearned\n          };\n        }\n        return word;\n      }));\n    }).catch(error => console.error('Failed to update learning progress:', error));\n  };\n  const handleDetailsClick = async word_progress => {\n    const TestId = activeTab === 0 ? 0 : 3;\n    console.log(wordDetails && wordDetails.Word === word_progress.Word);\n    console.log(wordDetails);\n    if (wordDetails) {\n      console.log(wordDetails.WordId);\n    }\n    console.log(word_progress.WordId);\n    // Check if the details are already showing for this word, and toggle them if so\n    if (wordDetails && wordDetails.Word === word_progress.Word) {\n      setWordDetails(undefined); // Toggle off if the same details are currently shown\n      console.log(\"OFF\");\n      return; // Exit the function early\n    }\n    try {\n      const response = await axios.get('/api/Word', {\n        params: {\n          WordId: word_progress.WordId,\n          TestId: TestId\n        }\n      });\n      setWordDetails(response.data[0]);\n    } catch (error) {\n      console.error('Failed to fetch word details:', error);\n      setWordDetails(undefined);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      overflowX: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      value: activeTab,\n      onChange: handleTabChange,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"GRE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"TOEFL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        justifyContent: 'center',\n        margin: 'auto',\n        mt: 3\n      },\n      children: words.map(word => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            minWidth: 275,\n            maxWidth: 400,\n            m: 1,\n            transition: '0.3s',\n            boxShadow: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  component: \"div\",\n                  color: \"primary\",\n                  gutterBottom: true,\n                  children: word.Word\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `${word.PercentLearned}%`,\n                  color: \"secondary\",\n                  sx: {\n                    mb: 2\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Last Learned:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 19\n                  }, this), \" \", `${formatDistanceToNow(parseISO(word.LastLearnedTime))} ago`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                disabled: word.Learned,\n                onClick: () => handleLearnClick(word),\n                startIcon: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-learn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 30\n                }, this),\n                sx: {\n                  mx: 1\n                },\n                children: \"Learn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"primary\",\n                onClick: () => handleDetailsClick(word),\n                startIcon: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-info-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 30\n                }, this),\n                sx: {\n                  mx: 1\n                },\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: wordDetails && wordDetails.Word === word.Word,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: wordDetails && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'left',\n                  justifyContent: 'left'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  color: \"primary\",\n                  gutterBottom: true,\n                  children: wordDetails.Word\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: wordDetails.PartOfSpeech,\n                  color: \"secondary\",\n                  sx: {\n                    mb: 2\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Description:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 25\n                  }, this), \" \", wordDetails.Description]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Stem:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 25\n                  }, this), \" \", wordDetails.Stem]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Example:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 25\n                  }, this), \" \", wordDetails.Example]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, word.Word, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(Study, \"vTanWEJlKNyzfvcOybnzi010kP4=\", false, function () {\n  return [useTheme];\n});\n_c = Study;\nexport default Study;\nvar _c;\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","Chip","Button","Grid","Tab","Tabs","Collapse","useTheme","CardActions","axios","formatDistanceToNow","parseISO","jsxDEV","_jsxDEV","defaults","baseURL","Study","_s","words","setWords","wordDetails","setWordDetails","undefined","user","setUser","activeTab","setActiveTab","handleTabChange","event","newValue","theme","rawData","sessionStorage","getItem","savedData","JSON","parse","fetchWords","TestId","response","get","params","Email","processedWords","data","map","word","Learn","Learned","error","console","handleLearnClick","word_progress","updateLearningProgress","currentPercent","distanceFromMax","increment","Math","max","min","round","post","WordId","PercentLearned","then","log","newPercentLearned","catch","handleDetailsClick","Word","sx","width","overflowX","children","value","onChange","centered","label","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","justifyContent","margin","mt","item","xs","sm","md","minWidth","maxWidth","m","transition","boxShadow","display","flexDirection","alignItems","variant","component","color","gutterBottom","mb","LastLearnedTime","disabled","onClick","startIcon","className","mx","in","PartOfSpeech","Description","Stem","Example","_c","$RefreshReg$"],"sources":["/Users/ziheng/UIUC Courses/SP24/CS411-Vocabuddy/react/src/components/Study/Study.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Typography, Chip, Button, Grid, Tab, Tabs, Collapse, useTheme, CardActions } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { formatDistanceToNow, parseISO } from 'date-fns';\nimport { word_progress, word } from '../../Types';  // Ensure your School type has a non-optional SchoolId of type number\n\naxios.defaults.baseURL = 'http://35.208.70.236/';\n\n\nfunction Study() {\n  const [words, setWords] = useState<word_progress[]>([]);\n  const [wordDetails, setWordDetails] = useState<word | undefined>(undefined);\n  const [user, setUser] = useState<any>(null);\n  const [activeTab, setActiveTab] = useState(0);  // 0 for GRE, 1 for TOEFL\n\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setActiveTab(newValue);\n  };\n\n  const theme = useTheme();\n\n  useEffect(() => {\n    const rawData = sessionStorage.getItem('user');\n    if (rawData) {\n        const savedData = JSON.parse(rawData);\n        if (savedData && savedData[0]) {\n            setUser(savedData[0]);\n        }\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchWords();\n  }, [activeTab]);\n\n  const fetchWords = async () => {\n    const TestId = activeTab === 0 ? 0 : 3;\n    try {\n      const response = await axios.get('/api/Study', { \n        params: {\n          Email: user.Email, TestId:TestId\n        }\n      });\n      \n      const processedWords = response.data.map((word: any) => ({\n        ...word,\n        Learn: word.Learned !== undefined ? word.Learned : false, // Default to 0 if not provided\n      }));\n\n      setWords(processedWords);\n\n    } catch (error) {\n      console.error('Failed to fetch words:', error);\n      setWords([]);\n    }\n  };\n\n  const handleLearnClick = (word_progress: word_progress) => {    \n    const updateLearningProgress = (currentPercent: number): number => {\n      // Calculate the increment based on an exponentially decaying function\n      const distanceFromMax = 100 - currentPercent;\n      const increment = Math.max(3, distanceFromMax * 0.2); // Ensuring minimum increment is 1\n  \n      // Update the PercentLearned, ensuring it doesn't exceed 100\n      return Math.min(Math.round(currentPercent + increment), 100);\n    };\n    \n    // Calculate the new percent learned before the API call\n    axios.post('/api/Learns/modify', {\n      Email: user.Email,\n      TestId: activeTab === 0 ? 0 : 3,\n      WordId: word_progress.WordId,\n      PercentLearned: updateLearningProgress(word_progress.PercentLearned)\n    }) \n    .then(() => {\n      console.log('Learning progress updated');\n      // Ensure we use newPercentLearned within the scope it's defined\n      const newPercentLearned = updateLearningProgress(word_progress.PercentLearned);\n      setWords(words.map(word => {\n          if (word.WordId === word_progress.WordId && word.TestId === word_progress.TestId) {\n              // Also update PercentLearned here, using newPercentLearned directly\n              return { ...word, Learned: true, PercentLearned: newPercentLearned };\n          }\n          return word;\n      }));\n    })\n    .catch((error) => console.error('Failed to update learning progress:', error));\n  };\n  \n  \n\n  const handleDetailsClick = async (word_progress: word_progress) => {\n    const TestId = activeTab === 0 ? 0 : 3;\n    console.log(wordDetails && (wordDetails.Word === word_progress.Word));\n    console.log(wordDetails);\n    if (wordDetails) {\n      console.log(wordDetails.WordId);\n    }\n    console.log(word_progress.WordId);\n    // Check if the details are already showing for this word, and toggle them if so\n    if (wordDetails && wordDetails.Word === word_progress.Word) {\n        setWordDetails(undefined); // Toggle off if the same details are currently shown\n        console.log(\"OFF\");\n        return; // Exit the function early\n    }\n\n    try {\n        const response = await axios.get('/api/Word', { \n            params: {\n                WordId: word_progress.WordId,\n                TestId: TestId\n            }\n        });\n        setWordDetails(response.data[0]);\n    } catch (error) {\n        console.error('Failed to fetch word details:', error);\n        setWordDetails(undefined);\n    }\n  };\n\n  return (\n    <Box sx={{ width: '100%', overflowX: 'hidden' }}>\n      <Tabs value={activeTab} onChange={handleTabChange} centered>\n        <Tab label=\"GRE\" />\n        <Tab label=\"TOEFL\" />\n      </Tabs>\n      \n      <Grid container spacing={2} sx={{ justifyContent: 'center', margin: 'auto', mt: 3 }}>\n        {words.map((word) => (\n          <Grid item key={word.Word} xs={12} sm={6} md={4}>\n            <Card sx={{ minWidth: 275, maxWidth: 400, m: 1, transition: '0.3s', boxShadow: 3}}>\n            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n              <CardContent>\n              <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                <Typography variant=\"h5\" component=\"div\" color=\"primary\" gutterBottom>\n                  {word.Word}\n                </Typography>\n                <Chip label={`${word.PercentLearned}%`} color=\"secondary\" sx={{ mb: 2 }} />\n                <Typography variant=\"body1\">\n                  <strong>Last Learned:</strong> {`${formatDistanceToNow(parseISO(word.LastLearnedTime))} ago`}\n                </Typography>\n              </Box>\n              </CardContent>\n              <CardActions>\n                <Button \n                  variant=\"contained\" \n                  color=\"primary\" \n                  disabled={word.Learned} \n                  onClick={() => handleLearnClick(word)}\n                  startIcon={<i className=\"fas fa-learn\"></i>}\n                  sx={{ mx: 1 }}\n                >\n                  Learn\n                </Button>\n                <Button \n                  variant=\"outlined\" \n                  color=\"primary\" \n                  onClick={() => handleDetailsClick(word)}\n                  startIcon={<i className=\"fas fa-info-circle\"></i>}\n                  sx={{ mx: 1 }}\n                >\n                  Details\n                </Button>\n              </CardActions>\n              </Box>\n              <Collapse in={wordDetails && wordDetails.Word === word.Word}>\n                <CardContent>\n                  {wordDetails && (\n                    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'left', justifyContent: 'left' }}>\n                      <Typography variant=\"h6\" component=\"div\" color=\"primary\" gutterBottom>\n                        {wordDetails.Word}\n                      </Typography>\n                      <Chip label={wordDetails.PartOfSpeech} color=\"secondary\" sx={{ mb: 2 }} />\n                      <Typography variant=\"body1\">\n                        <strong>Description:</strong> {wordDetails.Description}\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        <strong>Stem:</strong> {wordDetails.Stem}\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        <strong>Example:</strong> {wordDetails.Example}\n                      </Typography>\n                    </Box>\n                  )}\n                </CardContent>\n              </Collapse>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Study;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}